(window.webpackJsonp=window.webpackJsonp||[]).push([[653],{1115:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("LiteFLow从v2.6.0起开始支持组件的重试")]),t._v(" "),s("p",[t._v("其中又分全局重试和单个组件重试，下面一一说明")]),t._v(" "),s("h2",{attrs:{id:"全局重试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局重试"}},[t._v("#")]),t._v(" 全局重试")]),t._v(" "),s("p",[t._v("如果需要全局重试，你需要做如下配置：")]),t._v(" "),s("div",{staticClass:"language-properties extra-class"},[s("pre",{pre:!0,attrs:{class:"language-properties"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("liteflow.retry-count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("这表明，如果组件抛出任何异常，会重试3次，如果3次之后依旧异常，那么整条流程结束。")]),t._v(" "),s("p",[t._v("以下几种情况流程会继续：")]),t._v(" "),s("p",[t._v("如果组件里覆盖了"),s("code",[t._v("isContinueOnError")]),t._v("，设为true的话，那流程会继续。")]),t._v(" "),s("p",[t._v("异步流程的话，如果"),s("code",[t._v("<when>")]),t._v("上配置了"),s("code",[t._v('errorResume="true"')]),t._v("的话(默认就是true)，则下一个不同并行组会继续。关于"),s("code",[t._v("errorResume")]),t._v("的定义和使用，可以查看"),s("RouterLink",{attrs:{to:"/pages/v2.7.X/e8e603/"}},[t._v("同步异步编排")]),t._v("章节")],1),t._v(" "),s("h2",{attrs:{id:"单个组件重试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单个组件重试"}},[t._v("#")]),t._v(" 单个组件重试")]),t._v(" "),s("p",[t._v("LiteFlow还提供了基于单个组件，指定Exception的重试特性，LiteFlow从2.6.0开始提供了"),s("code",[t._v("@LiteflowRetry")]),t._v("标注")]),t._v(" "),s("p",[t._v("你可以在指定的组件上进行标注：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@LiteflowComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@LiteflowRetry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CCmp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do your biz")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("那么，这样就表明，如果这个组件有任何异常抛出，则最多重试5遍。如果第5遍重试再不成功，那就会真正抛出你的业务异常")]),t._v(" "),s("p",[t._v("同样，还可以在这个标注上指定一个或者多个异常：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@LiteflowComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"e"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@LiteflowRetry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("retry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forExceptions "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NullPointerException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ECmp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do your biz")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样就表明，如果这个组件抛出的异常是"),s("code",[t._v("NullPointerException")]),t._v("或者"),s("code",[t._v("IllegalArgumentException")]),t._v("（或者是这两个Exception类的子类），则会进行最多5次的尝试，最后一遍再不成功，那就会真正抛出异常。")]),t._v(" "),s("h2",{attrs:{id:"全局重试和单个组件重试都定义的情况下"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局重试和单个组件重试都定义的情况下"}},[t._v("#")]),t._v(" 全局重试和单个组件重试都定义的情况下")]),t._v(" "),s("p",[t._v("如果在2者都定义的情况下，优先取单个组件的重试配置。没有的情况下，再取全局配置。")])])}),[],!1,null,null,null);s.default=e.exports}}]);