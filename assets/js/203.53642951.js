(window.webpackJsonp=window.webpackJsonp||[]).push([[203],{666:function(t,a,s){"use strict";s.r(a);var n=s(8),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("LiteFlow支持了用Java本身作为脚本语言的特性。")]),t._v(" "),a("p",[t._v("也就是说，在写组件脚本时，你可以完全用Java自身的语法来写脚本。同样这部分的脚本，也是可以进行热刷新的。")]),t._v(" "),a("h2",{attrs:{id:"依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖"}},[t._v("#")]),t._v(" 依赖")]),t._v(" "),a("p",[t._v("LiteFlow提供了两种不同的Java脚本引擎，分别是：")]),t._v(" "),a("p",[a("strong",[t._v("liteflow-script-java")]),t._v("：以Janino为底层来实现。版本支持："),a("Badge",{attrs:{text:"v2.11.0+",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("你需要额外依赖LiteFlow提供的脚本插件：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.yomahub"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("liteflow-script-java"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.12.4.1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("br"),t._v(" "),a("p",[a("strong",[t._v("liteflow-script-javax")]),t._v("：以Liquor为底层来实现。版本支持："),a("Badge",{attrs:{text:"v2.12.4+",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("你需要额外依赖LiteFlow提供的脚本插件：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.yomahub"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("liteflow-script-javax"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.12.4.1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("使用以Liquor为核心的javax插件，部署运行的时候必须为JDK，而不能是JRE，这点要注意下。")])]),t._v(" "),a("h2",{attrs:{id:"为什么提供两个实现引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么提供两个实现引擎"}},[t._v("#")]),t._v(" 为什么提供两个实现引擎")]),t._v(" "),a("p",[t._v("liteflow-script-java是以前就提供的。而liteflow-script-javax是后来提供的。他们两个引擎在底层选型上面不同。运行机制不同。使用起来的实现接口也略微有些区别。为了向前兼容。选择另外提供一个脚本引擎。而没有覆盖原有的引擎。")]),t._v(" "),a("p",[a("strong",[t._v("要注意的是，这2个插件只能二选一，不能并存同时依赖。")])]),t._v(" "),a("h2",{attrs:{id:"两个引擎的优劣势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#两个引擎的优劣势"}},[t._v("#")]),t._v(" 两个引擎的优劣势")]),t._v(" "),a("p",[t._v("两个引擎的对比，也就是底层所用引擎Janino和Liquor的对比。")]),t._v(" "),a("p",[t._v("Janino的优点是编译和运行速度都非常快，缺点是只支持Jdk 6的语法，不支持lambda和泛型。")]),t._v(" "),a("p",[t._v("Liquor的优点是运行速度非常快，支持jdk的所有语法，缺点是编译速度比较慢。")]),t._v(" "),a("p",[a("strong",[t._v("这里推荐一般使用者使用Liquor为底层的liteflow-script-javax插件。")])]),t._v(" "),a("p",[t._v("如果你的逻辑是每次通过动态构建脚本节点去运行（可以参考"),a("RouterLink",{attrs:{to:"/pages/v2.12.X/5bbee3/"}},[t._v("用代码动态构造规则-构造Node")]),t._v("），那么推荐还是用Janino为底层的liteflow-script-java插件。")],1),t._v(" "),a("h2",{attrs:{id:"使用-liteflow-script-java"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-liteflow-script-java"}},[t._v("#")]),t._v(" 使用(liteflow-script-java)")]),t._v(" "),a("p",[t._v("使用liteflow-script-java插件，需要像如下去定义，以下是个例子：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("普通脚本1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("language")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v('<![CDATA[\n    import com.yomahub.liteflow.slot.DefaultContext;\n    import com.yomahub.liteflow.spi.holder.ContextAwareHolder;\n    import com.yomahub.liteflow.test.script.java.common.cmp.TestDomain;\n    import com.yomahub.liteflow.script.body.JaninoCommonScriptBody;\n    import com.yomahub.liteflow.script.ScriptExecuteWrap;\n\n    public class Demo implements JaninoCommonScriptBody{\n        public Void body(ScriptExecuteWrap wrap){\n            int v1 = 2;\n            int v2 = 3;\n            DefaultContext ctx = (DefaultContext)wrap.cmp.getFirstContextBean();\n            ctx.setData("s1", v1 * v2);\n\n            TestDomain domain = (TestDomain)ContextAwareHolder.loadContextAware().getBean(TestDomain.class);\n\n            String str = domain.sayHello("jack");\n            ctx.setData("hi", str);\n\n            return null;\n        }\n    }\n    ]]>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[a("code",[t._v("script")]),t._v("：普通脚本节点，需要实现"),a("code",[t._v("JaninoCommonScriptBody")]),t._v("接口，脚本里返回null即可。")]),t._v(" "),a("p",[a("code",[t._v("switch_script")]),t._v("：选择脚本节点，需要实现"),a("code",[t._v("JaninoSwitchScriptBody")]),t._v("接口，脚本里需要返回选择的节点Id。")]),t._v(" "),a("p",[a("code",[t._v("boolean_script")]),t._v("：布尔脚本节点，需要实现"),a("code",[t._v("JaninoBooleanScriptBody")]),t._v("接口，脚本里需要返回true/false。")]),t._v(" "),a("p",[a("code",[t._v("for_script")]),t._v("：数量循环节点，需要实现"),a("code",[t._v("JaninoForScriptBody")]),t._v("接口，脚本里需要返回数值类型，表示循环次数。")]),t._v(" "),a("p",[a("strong",[t._v("正如上面所说到那样，使用liteflow-script-java是没有lambda语法的，并且不支持泛型。")]),t._v(" 所以以上很多地方要进行强转，例如：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("普通脚本1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("language")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v("<![CDATA[\n    ...\n\n    public class Demo implements JaninoCommonScriptBody{\n        public Void body(ScriptExecuteWrap wrap){\n            ...\n            DefaultContext ctx = (DefaultContext)wrap.cmp.getFirstContextBean();\n            ...\n            TestDomain domain = (TestDomain)ContextAwareHolder.loadContextAware().getBean(TestDomain.class);\n            ...\n            return null;\n        }\n    }\n    ]]>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h2",{attrs:{id:"使用-liteflow-script-javax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-liteflow-script-javax"}},[t._v("#")]),t._v(" 使用(liteflow-script-javax)")]),t._v(" "),a("p",[t._v("使用liteflow-script-java插件，需要像如下去定义，以下是个例子：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("普通脚本1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("language")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v('<![CDATA[\n    import cn.hutool.core.collection.ListUtil;\n    import com.alibaba.fastjson2.JSON;\n    import com.yomahub.liteflow.script.body.CommonScriptBody;\n    import com.yomahub.liteflow.slot.DefaultContext;\n    import com.yomahub.liteflow.spi.holder.ContextAwareHolder;\n    import com.yomahub.liteflow.test.script.javax.common.cmp.Person;\n    import com.yomahub.liteflow.test.script.javax.common.cmp.TestDomain;\n    import com.yomahub.liteflow.script.ScriptExecuteWrap;\n    import java.util.List;\n    import java.util.function.ToIntFunction;\n\n    public class Demo implements CommonScriptBody {\n        public Void body(ScriptExecuteWrap wrap) {\n            int v1 = 2;\n            int v2 = 3;\n            DefaultContext ctx = wrap.getCmp().getFirstContextBean();\n            ctx.setData("s1", v1 * v2);\n\n            TestDomain domain = ContextAwareHolder.loadContextAware().getBean(TestDomain.class);\n            System.out.println(domain);\n            String str = domain.sayHello("jack");\n            ctx.setData("hi", str);\n\n            List<Person> personList = ListUtil.toList(\n                    new Person("jack", 15000),\n                    new Person("tom", 13500),\n                    new Person("peter", 18600)\n            );\n\n            int totalSalary = personList.stream().mapToInt(Person::getSalary).sum();\n\n            System.out.println(totalSalary);\n            ctx.setData("salary", 47100);\n\n            return null;\n        }\n    }\n    ]]>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[a("code",[t._v("script")]),t._v("：普通脚本节点，需要实现"),a("code",[t._v("CommonScriptBody")]),t._v("接口，脚本里返回null即可。")]),t._v(" "),a("p",[a("code",[t._v("switch_script")]),t._v("：选择脚本节点，需要实现"),a("code",[t._v("SwitchScriptBody")]),t._v("接口，脚本里需要返回选择的节点Id。")]),t._v(" "),a("p",[a("code",[t._v("boolean_script")]),t._v("：布尔脚本节点，需要实现"),a("code",[t._v("BooleanScriptBody")]),t._v("接口，脚本里需要返回true/false。")]),t._v(" "),a("p",[a("code",[t._v("for_script")]),t._v("：数量循环节点，需要实现"),a("code",[t._v("ForScriptBody")]),t._v("接口，脚本里需要返回数值类型，表示循环次数。")]),t._v(" "),a("h2",{attrs:{id:"和java类进行交互"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#和java类进行交互"}},[t._v("#")]),t._v(" 和Java类进行交互")]),t._v(" "),a("p",[t._v("由于Java作为脚本，是需要定义一个类的。并且实现其接口所定义的方法。")]),t._v(" "),a("p",[t._v("方法里有"),a("code",[t._v("ScriptExecuteWrap")]),t._v("这个参数。而"),a("code",[t._v("warp.cmp")]),t._v("就是当前的"),a("code",[t._v("NodeComponent")]),t._v("，等同于"),a("code",[t._v("this")]),t._v("，所以你可以用"),a("code",[t._v("warp.cmp")]),t._v("来调取上下文，或者是元数据。使用方式和Java类组件是一致的。")]),t._v(" "),a("h2",{attrs:{id:"如何取spring上下文中的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何取spring上下文中的数据"}},[t._v("#")]),t._v(" 如何取Spring上下文中的数据")]),t._v(" "),a("p",[t._v("值得注意的是，虽然脚本组件完全是Java的语法，但是你无法用"),a("code",[t._v("@Resource")]),t._v("或者"),a("code",[t._v("@Autowired")]),t._v("来进行注入spring的bean。")]),t._v(" "),a("p",[t._v("LiteFlow提供一个方法，用来获取Spring中的bean数据，如下示例（如果是liteflow-script-java要进行强转类型）")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDomain")]),t._v(" domain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContextAwareHolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadContextAware")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDomain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样就可以获得在spring上下文中注入的UserDomain对象了。")])])}),[],!1,null,null,null);a.default=e.exports}}]);