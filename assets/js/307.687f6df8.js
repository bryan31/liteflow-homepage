(window.webpackJsonp=window.webpackJsonp||[]).push([[307],{767:function(t,a,s){"use strict";s.r(a);var n=s(8),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("经过上面几小章，你是不是已经大致了解了LiteFlow该如何编排了呢？")]),t._v(" "),a("p",[t._v("这章我们结合以上几个章节，来看下复杂流程编排的例子。")]),t._v(" "),a("p",[t._v("这章我们举两个比较复杂的例子。")]),t._v(" "),a("h2",{attrs:{id:"复杂例子一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂例子一"}},[t._v("#")]),t._v(" 复杂例子一")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("图示")]),t._v(" "),a("img",{staticClass:"no-zoom",staticStyle:{zoom:"80%"},attrs:{src:t.$withBase("/img/flow_example/e10.svg")}})]),t._v(" "),a("p",[t._v("上面这个图可以表示为以下的编排表达式：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n    THEN(\n        A,\n        WHEN(\n            THEN(B, C),\n            THEN(D, E, F),\n            THEN(\n                SWITCH(G).to(\n                    THEN(H, I, WHEN(J, K)).id("t1"),\n                    THEN(L, M).id("t2")\n                ),\n                N\n            )\n        ),\n        Z\n    );\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("我相信大多数人应该能看懂，但是如果你用子变量再优化的话，会更加清晰，上面的可以优化成：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n    item1 = THEN(B, C);\n    item2 = THEN(D, E, F);\n    item3_1 = THEN(H, I, WHEN(J, K)).id("t1");\n    item3_2 = THEN(L, M).id("t2");\n    item3 = THEN(SWITCH(G).to(item3_1, item3_2), N);\n    \n    THEN(\n        A,\n        WHEN(item1, item2, item3),\n        Z\n    );\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("是不是清晰很多了？")]),t._v(" "),a("p",[t._v("如果你已经看懂上面这个例子，那我们再来看一个巨复杂的")]),t._v(" "),a("h2",{attrs:{id:"复杂例子二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复杂例子二"}},[t._v("#")]),t._v(" 复杂例子二")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("图示")]),t._v(" "),a("img",{staticClass:"no-zoom",staticStyle:{zoom:"80%"},attrs:{src:t.$withBase("/img/flow_example/e9.svg")}})]),t._v(" "),a("p",[t._v("上面这个图可以表示为以下的编排表达式：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n    THEN(\n        A,\n        SWITCH(B).to(\n            THEN(D, E, F).id("t1"),\n            THEN(\n                C,\n                WHEN(\n                    THEN(\n                        SWITCH(G).to(THEN(H, I).id("t2"), J),\n                        K\n                    ),\n                    THEN(L, M)\n                )\n            ).id("t3")\n        ),\n        Z\n    );\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("这个表达式初看，我觉得一部分人会晕，括号都得数半天，当然如果你仔细研读的话，应该能看懂。")]),t._v(" "),a("p",[t._v("对于这种比较难以阅读的表达式来说，官方建议拆子流程或者拆子变量。下面我用拆子变量的方式优化下：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\n    item1 = THEN(D, E, F).id("t1");\n    \n    item2_1 = THEN(\n        SWITCH(G).to(\n            THEN(H, I).id("t2"),\n            J\n        ),\n        K\n    );\n    \n    item2_2 = THEN(L, M);\n    \n    item2 = THEN(C, WHEN(item2_1, item2_2)).id("t3");\n    \n    THEN(\n        A,\n        SWITCH(B).to(item1, item2),\n        Z\n    );\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("以上2个例子可在源码中的测试用例中找到，你可以运行并测试。")]),t._v(" "),a("p",[t._v("复杂案例一："),a("code",[t._v("com.yomahub.liteflow.test.complex.ComplexELSpringbootTest1")])]),t._v(" "),a("p",[t._v("复杂案例二："),a("code",[t._v("com.yomahub.liteflow.test.complex.ComplexELSpringbootTest2")])])]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("LiteFlow的规则表达式语法简单，但是却可以描绘出大多数编排场景。努力让你的规则最大程度的简化。")]),t._v(" "),a("p",[t._v("在实际场景中，如果遇到复杂编排，完全可以使用子流程或者子变量来简化你的整个规则。让你的规则优雅且更容易阅读！")])])}),[],!1,null,null,null);a.default=e.exports}}]);