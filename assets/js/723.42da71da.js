(window.webpackJsonp=window.webpackJsonp||[]).push([[723],{1185:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"v2-10-6介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v2-10-6介绍"}},[t._v("#")]),t._v(" v2.10.6介绍")]),t._v(" "),s("p",[t._v("v2.10.6版本是一个进行诸多增强的版本。总计有11个issue的增强，3个issue的修复。")]),t._v(" "),s("h2",{attrs:{id:"全面支持jdk17"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全面支持jdk17"}},[t._v("#")]),t._v(" 全面支持JDK17")]),t._v(" "),s("p",[t._v("其实LiteFlow在2.10.0的时候，已经支持了JDK17。但是项目并未对JDK17进行完整的测试。导致很多小伙伴实际在JDK17环境中跑起来，出现了一些问题。")]),t._v(" "),s("p",[t._v("这是由于LiteFlow的900多个测试用例全部都是针对于JDK8来跑的。并未在JDK17下进行完整的测试。")]),t._v(" "),s("p",[t._v("而2.10.6这个版本，我们系统的针对JDK17进行了完整的测试。通过了全部的测试用例。所以大家可以放心的使用。")]),t._v(" "),s("p",[t._v("当然，LiteFlow也是支持Springboot3的。")]),t._v(" "),s("p",[t._v("有的同学可能会问，JDK20支持不支持？其实连作者自己也不知道是否支持JDK20，因为没有进行系统的测试过。这版本太新了。")]),t._v(" "),s("h2",{attrs:{id:"支持sql插件使用自己定义的数据源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支持sql插件使用自己定义的数据源"}},[t._v("#")]),t._v(" 支持SQL插件使用自己定义的数据源")]),t._v(" "),s("p",[t._v("LiteFlow支持将EL表达式，脚本存放在所有的关系型数据库中。但是之前的版本，LiteFlow有自己的一套数据库连接配置，这就导致了往往使用者同一套数据库配置要配置2遍，还有一些使用者在实际的环境中，可能数据源是加密的，或者数据源是从外部获取的。这就没法使用LiteFlow提供的数据源配置了。")]),t._v(" "),s("p",[t._v("所以，这次我们支持了让SQL插件能够使用项目内的数据源来获取数据。更加优雅和方便。")]),t._v(" "),s("p",[t._v("甚至于我们还考虑到了多数据源的场景，让LiteFlow能够智能的挑选正确的数据源。")]),t._v(" "),s("h2",{attrs:{id:"liteflow的测试用例全面转向junit5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#liteflow的测试用例全面转向junit5"}},[t._v("#")]),t._v(" LiteFlow的测试用例全面转向Junit5")]),t._v(" "),s("p",[t._v("这也许和使用者没啥太大关系。")]),t._v(" "),s("p",[t._v("LiteFlow这个框架功能点非常多，使用人数也非常庞大。所以每一次发版，我都需要补很多测试用例。测试用例是LiteFlow整个框架质量的命脉。甚至于测试用例成为了和核心代码一样重要的存在。所以LiteFlow目前有将近1000个测试用例。")]),t._v(" "),s("p",[t._v("在2.10.6版本的源代码中，所有的测试用例从原先的Junit4全部转向了Junit5。更加稳定。更加有保障。")]),t._v(" "),s("h2",{attrs:{id:"对脚本和java的联动进行加强"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对脚本和java的联动进行加强"}},[t._v("#")]),t._v(" 对脚本和Java的联动进行加强")]),t._v(" "),s("p",[t._v("主要加强点在"),s("code",[t._v("@ScriptBean")]),t._v("这个注解，这个是脚本和Java联动的关键注解，在社区群里，有同学报出这个注解有时无法正常的工作，导致脚本拿不到Java的对象。对这个问题，我进行了深入研究。在2.10.6版本中，对这个注解进行了很多的优化，应该能彻底解决之前的问题。")]),t._v(" "),s("h2",{attrs:{id:"对声明式组件增加了组件名称的设定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对声明式组件增加了组件名称的设定"}},[t._v("#")]),t._v(" 对声明式组件增加了组件名称的设定")]),t._v(" "),s("p",[t._v("在2.10.6版本中，声明式组件支持了声明"),s("code",[t._v("nodeName")]),t._v(" 这个属性了。")]),t._v(" "),s("h2",{attrs:{id:"错误事件通知的改造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#错误事件通知的改造"}},[t._v("#")]),t._v(" 错误事件通知的改造")]),t._v(" "),s("p",[t._v("原先错误事件回调通知是这样定义的：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这样定义导致有些同学不知道如何取"),s("code",[t._v("Exception")]),t._v("，为了使api更加友好，这次这个回调方法改成了如下形式：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("onError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"全局拦截器的改造"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局拦截器的改造"}},[t._v("#")]),t._v(" 全局拦截器的改造")]),t._v(" "),s("p",[t._v("原先全局拦截器的定义如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CmpAspect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ICmpAroundAspect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeProcess")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" nodeId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slot")]),t._v(" slot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" slot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//before business")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterProcess")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" nodeId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Slot")]),t._v(" slot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" slot"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//after business")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这种方式无法直观的拿到很多信息，为了api更加友好，这次我们改造了这个接口的实现参数：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CmpAspect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ICmpAroundAspect")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeProcess")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeComponent")]),t._v(" cmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//before business")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterProcess")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeComponent")]),t._v(" cmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("YourContextBean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//after business")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"布尔表达式中or的短路判断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔表达式中or的短路判断"}},[t._v("#")]),t._v(" 布尔表达式中"),s("code",[t._v("OR")]),t._v("的短路判断")]),t._v(" "),s("p",[t._v("在社区中有同学反应，如果有以下EL语句：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("IF(OR(a,b,c), x);\n")])])]),s("p",[t._v("如果a返回true，那其实b和c应该不用执行，而事实情况是LiteFlow把a,b,c都执行了。")]),t._v(" "),s("p",[t._v("所以这次我们也收到了贡献者的PR，把这个问题给优化了。")]),t._v(" "),s("h2",{attrs:{id:"同一个组件复用时step的记录问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同一个组件复用时step的记录问题"}},[t._v("#")]),t._v(" 同一个组件复用时Step的记录问题")]),t._v(" "),s("p",[s("code",[t._v("LiteflowResponse")]),t._v("的step可以用来回溯整个链路的实际执行情况。但是在相同组件复用的情况下，这个step的记录在之前版本中有些问题。此次我们也修复了这个问题。")]),t._v(" "),s("h2",{attrs:{id:"日志方面的增强"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日志方面的增强"}},[t._v("#")]),t._v(" 日志方面的增强")]),t._v(" "),s("p",[t._v("在2.10.6版本中，系统默认会以info级别打出所有的节点的耗时信息。")]),t._v(" "),s("p",[t._v("如果觉得日志太多的话，可以通过设置"),s("code",[t._v("liteflow.print-execution-log=false")]),t._v("来进行关闭整个LiteFlow框架的系统日志。")])])}),[],!1,null,null,null);s.default=e.exports}}]);