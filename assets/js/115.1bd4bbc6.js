(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{578:function(t,e,o){"use strict";o.r(e);var v=o(8),l=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("strong",[t._v("版本支持：")]),e("Badge",{attrs:{text:"v2.12.0+",vertical:"middle"}})],1),t._v(" "),e("p",[t._v("在之前的介绍中，LiteFlow执行一个规则主要是依赖"),e("code",[t._v("FlowExecutor")]),t._v("来执行，需要指定一个规则Id。")]),t._v(" "),e("p",[t._v("但是在有些场景中，使用者定义若干个规则，具体执行哪个规则事先并不知道。需要依靠入参去动态判断执行某一个或多个规则。")]),t._v(" "),e("p",[t._v("在之前的介绍中，除非你定义一个主规则。通过"),e("code",[t._v("SWITCH")]),t._v("去判断，来执行哪个子规则。其实也不是不可以。但是本质上还是执行一个规则。只不过通过这个主规则把子规则给串起来而已。并且想要同时执行多个规则，也是需要刻意去编排的。初学者并不知道如何去比编排这样的规则场景。")]),t._v(" "),e("p",[t._v("为此，LiteFlow推出了决策路由特性，也就是说，现在LiteFlow支持不指定规则，在所有规则中通过对决策表达式的判断来动态执行规则。符合决策表达式的规则则执行，不符合的不予以执行。")]),t._v(" "),e("p",[t._v("这个特性能很好的解决需要动态决策的场景。")])])}),[],!1,null,null,null);e.default=l.exports}}]);