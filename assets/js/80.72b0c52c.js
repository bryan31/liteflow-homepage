(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{542:function(t,a,s){"use strict";s.r(a);var n=s(8),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("LiteFlow支持了用Java本身作为脚本语言的特性。用Java作为脚本语言也是LiteFlow首推的脚本语言。")]),t._v(" "),a("p",[t._v("也就是说，在写组件脚本时，你可以完全用Java自身的语法来写脚本。同样这部分的脚本，也是可以进行热刷新的。")]),t._v(" "),a("p",[t._v("LiteFlow提供了三种Java脚本的插件，分别为：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("liteflow-script-java")]),t._v("：以Janino为底层来实现。版本支持："),a("Badge",{attrs:{text:"v2.11.0+",vertical:"middle"}}),t._v("，这个插件从v2.13.0开始起不再推荐使用，今后也不会有任何维护和更新")],1),t._v(" "),a("li",[a("strong",[t._v("liteflow-script-javax")]),t._v("：以Liquor为底层来实现。版本支持："),a("Badge",{attrs:{text:"v2.12.4+",vertical:"middle"}})],1),t._v(" "),a("li",[a("strong",[t._v("liteflow-script-javax-pro")]),t._v("：升级版本，完全同静态java写法一样。版本支持："),a("Badge",{attrs:{text:"v2.13.0+",vertical:"middle"}})],1)]),t._v(" "),a("p",[t._v("以下针对于"),a("strong",[t._v("liteflow-script-javax")]),t._v("和"),a("strong",[t._v("liteflow-script-javax-pro")]),t._v("这2个插件进行说明。")]),t._v(" "),a("p",[t._v("如果你使用2.13.X系列版本，推荐使用"),a("strong",[t._v("liteflow-script-javax-pro")]),t._v("。")]),t._v(" "),a("p",[t._v("如果你使用2.12.X系列版本，推荐使用"),a("strong",[t._v("liteflow-script-javax")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"使用liteflow-script-javax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用liteflow-script-javax"}},[t._v("#")]),t._v(" 使用liteflow-script-javax")]),t._v(" "),a("p",[t._v("你需要额外依赖LiteFlow提供的脚本插件：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.yomahub"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("liteflow-script-javax"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.13.2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("使用以Liquor为核心的javax插件，部署运行的时候必须为JDK，而不能是JRE，这点要注意下。")])]),t._v(" "),a("p",[t._v("使用liteflow-script-javax插件，需要像如下去定义，以下是个例子：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("普通脚本1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("language")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v('<![CDATA[\n    import cn.hutool.core.collection.ListUtil;\n    import com.alibaba.fastjson2.JSON;\n    import com.yomahub.liteflow.script.body.CommonScriptBody;\n    import com.yomahub.liteflow.slot.DefaultContext;\n    import com.yomahub.liteflow.spi.holder.ContextAwareHolder;\n    import com.yomahub.liteflow.test.script.javax.common.cmp.Person;\n    import com.yomahub.liteflow.test.script.javax.common.cmp.TestDomain;\n    import com.yomahub.liteflow.script.ScriptExecuteWrap;\n    import java.util.List;\n    import java.util.function.ToIntFunction;\n\n    public class Demo implements CommonScriptBody {\n        public Void body(ScriptExecuteWrap wrap) {\n            int v1 = 2;\n            int v2 = 3;\n            DefaultContext ctx = wrap.getCmp().getFirstContextBean();\n            ctx.setData("s1", v1 * v2);\n\n            TestDomain domain = ContextAwareHolder.loadContextAware().getBean(TestDomain.class);\n            System.out.println(domain);\n            String str = domain.sayHello("jack");\n            ctx.setData("hi", str);\n\n            List<Person> personList = ListUtil.toList(\n                    new Person("jack", 15000),\n                    new Person("tom", 13500),\n                    new Person("peter", 18600)\n            );\n\n            int totalSalary = personList.stream().mapToInt(Person::getSalary).sum();\n\n            System.out.println(totalSalary);\n            ctx.setData("salary", 47100);\n\n            return null;\n        }\n    }\n    ]]>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("如果你要实现其他种类的组件，请替换实现的接口：")]),t._v(" "),a("p",[a("code",[t._v("script")]),t._v("：普通脚本节点，需要实现"),a("code",[t._v("CommonScriptBody")]),t._v("接口，脚本里返回null即可。")]),t._v(" "),a("p",[a("code",[t._v("switch_script")]),t._v("：选择脚本节点，需要实现"),a("code",[t._v("SwitchScriptBody")]),t._v("接口，脚本里需要返回选择的节点Id。")]),t._v(" "),a("p",[a("code",[t._v("boolean_script")]),t._v("：布尔脚本节点，需要实现"),a("code",[t._v("BooleanScriptBody")]),t._v("接口，脚本里需要返回true/false。")]),t._v(" "),a("p",[a("code",[t._v("for_script")]),t._v("：数量循环节点，需要实现"),a("code",[t._v("ForScriptBody")]),t._v("接口，脚本里需要返回数值类型，表示循环次数。")]),t._v(" "),a("p",[t._v("之前类方法通过this调用的，现在都用"),a("code",[t._v("wrap.getCmp()")]),t._v("来替换。")]),t._v(" "),a("p",[t._v("但是在这个插件中，你无法覆盖其他方法，比如说"),a("code",[t._v("isAccess")]),t._v("或者"),a("code",[t._v("onSuccess")]),t._v("等方法。")]),t._v(" "),a("h2",{attrs:{id:"使用liteflow-script-javax-pro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用liteflow-script-javax-pro"}},[t._v("#")]),t._v(" 使用liteflow-script-javax-pro")]),t._v(" "),a("p",[t._v("你需要额外依赖LiteFlow提供的脚本插件：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.yomahub"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("liteflow-script-javax-pro"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.13.2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("使用以Liquor为核心的javax插件，部署运行的时候必须为JDK，而不能是JRE，这点要注意下。")])]),t._v(" "),a("p",[t._v("这个为上一个插件的升级版本，在这个插件中，定义java完全是按照静态java类的方式去定义了，以下是一个例子：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("node")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("普通脚本1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("language")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token cdata"}},[t._v('<![CDATA[\n    import cn.hutool.core.collection.ListUtil;\n    import com.yomahub.liteflow.core.NodeComponent;\n    import com.yomahub.liteflow.slot.DefaultContext;\n    import com.yomahub.liteflow.spi.holder.ContextAwareHolder;\n    import com.yomahub.liteflow.test.script.javaxpro.common.cmp.Person;\n    import com.yomahub.liteflow.test.script.javaxpro.common.cmp.TestDomain;\n\n    import java.util.List;\n\n    public class Demo extends NodeComponent {\n        @Override\n        public void process() throws Exception {\n            int v1 = 2;\n            int v2 = 3;\n            DefaultContext ctx = this.getFirstContextBean();\n            ctx.setData("s1", v1 * v2);\n\n            TestDomain domain = ContextAwareHolder.loadContextAware().getBean(TestDomain.class);\n            System.out.println(domain);\n            String str = domain.sayHello("jack");\n            ctx.setData("hi", str);\n\n            List<Person> personList = ListUtil.toList(\n                    new Person("jack", 15000),\n                    new Person("tom", 13500),\n                    new Person("peter", 18600)\n            );\n\n            int totalSalary = personList.stream().mapToInt(Person::getSalary).sum();\n\n            System.out.println(totalSalary);\n            ctx.setData("salary", 47100);\n        }\n    }\n    ]]>')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("可以看到，在升级版的插件中，其定义java的方式完全和类里定义的完全一致了。这意味着，你可以用this来进行调用，你也可以覆盖其他方法如"),a("code",[t._v("isAccess")]),t._v("，"),a("code",[t._v("beforeProcess")]),t._v("等。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("即便是java脚本组件，目前还依旧不可以定义迭代循环组件。这意味着即使你用了java-pro插件，你现在可以继承"),a("code",[t._v("NodeIteratorComponent")]),t._v("，但是你依旧无法正确执行。")]),t._v(" "),a("p",[t._v("请用"),a("code",[t._v("for_script")]),t._v("组件来代替。")])]),t._v(" "),a("h2",{attrs:{id:"如何取spring上下文中的数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何取spring上下文中的数据"}},[t._v("#")]),t._v(" 如何取Spring上下文中的数据")]),t._v(" "),a("p",[t._v("值得注意的是，以上2个脚本插件虽然完全是Java的语法，但是你无法用"),a("code",[t._v("@Resource")]),t._v("或者"),a("code",[t._v("@Autowired")]),t._v("来进行注入spring的bean。")]),t._v(" "),a("p",[t._v("LiteFlow提供一个方法，用来获取Spring中的bean数据，如下示例：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDomain")]),t._v(" domain "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ContextAwareHolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("loadContextAware")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserDomain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样就可以获得在spring上下文中注入的UserDomain对象了。")])])}),[],!1,null,null,null);a.default=e.exports}}]);