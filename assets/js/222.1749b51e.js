(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{683:function(v,_,o){"use strict";o.r(_);var e=o(8),n=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("在LiteFlow框架中，最重要的两个概念就是"),_("code",[v._v("规则")]),v._v("以及"),_("code",[v._v("组件")]),v._v("。")]),v._v(" "),_("p",[v._v("框架提供了一个元数据管理器"),_("code",[v._v("FlowBus")]),v._v("用来管理这两大元素。")]),v._v(" "),_("p",[v._v("对于所有解析后的规则都保存在"),_("code",[v._v("FlowBus")]),v._v("中的"),_("code",[v._v("chainMap")]),v._v("中，并且"),_("code",[v._v("FlowBus")]),v._v("也提供了若干静态方法来对规则进行管理。")]),v._v(" "),_("p",[v._v("对于规则的管理，常用的方法都提供，比如说判断一个chain是否存在，获得一个chain,删除一个chain等。具体方法这里不再细说，看方法名就可以轻松判断出来。")]),v._v(" "),_("p",[v._v("对于组件来说，所有注册的节点都应该在"),_("code",[v._v("nodeMap")]),v._v("中，如果开发者发现自己的组件并不在"),_("code",[v._v("nodeMap")]),v._v("中，说明并未注册成功。在没注册的情况下执行链路，就会报组件不存在这样的错误。")]),v._v(" "),_("p",[_("code",[v._v("FlowBus")]),v._v("同样对组件也提供了一些基本的方法供操作。")])])}),[],!1,null,null,null);_.default=n.exports}}]);