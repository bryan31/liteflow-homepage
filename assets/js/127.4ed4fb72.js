(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{589:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("LiteFlow为执行的过程提供了详细的步骤信息。")]),t._v(" "),s("h2",{attrs:{id:"基本应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本应用"}},[t._v("#")]),t._v(" 基本应用")]),t._v(" "),s("p",[t._v("获取一条流程执行的步骤信息是通过"),s("code",[t._v("LiteflowResponse")]),t._v("对象来获取的：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LiteflowResponse")]),t._v(" response "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" flowExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute2Resp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chain1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"初始参数"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CustomContext")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CmpStep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" stepMap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecuteSteps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//或者你也可以通过以下的语句来获得一个步骤队列")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Queue")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CmpStep")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" stepQueue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecuteStepQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("以上这2个方法的区别是：")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("获得"),s("code",[t._v("Map")]),t._v("返回值的那个方法，如果有多个相同的组件，那么以上这个方法获得的"),s("code",[t._v("Map")]),t._v("中这个组件id的value是最终的那个步骤信息。")]),t._v(" "),s("p",[t._v("而获得"),s("code",[t._v("Queue<CmpStep>")]),t._v("这个返回值的方法，返回值里包含了所有的步骤信息，相同的组件在规则里定义n次，那么这里也有n个步骤。")])]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("CmpStep")]),t._v("这个对象里，你可以通过以下方法获得你要的数据：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("isSuccess")]),t._v("：此组件是否执行成功")]),t._v(" "),s("li",[s("code",[t._v("getNodeId")]),t._v("：获得组件Id")]),t._v(" "),s("li",[s("code",[t._v("getNodeName")]),t._v("：获得组件名称")]),t._v(" "),s("li",[s("code",[t._v("getTag")]),t._v("：获得组件标签值")]),t._v(" "),s("li",[s("code",[t._v("getTimeSpent")]),t._v("：获得组件的耗时，单位为毫秒")]),t._v(" "),s("li",[s("code",[t._v("getStepData")]),t._v("：获得自定义step信息(从v2.13.0开始支持)")]),t._v(" "),s("li",[s("code",[t._v("getThreadName")]),t._v("：获得运行threadName信息(从v2.13.0开始支持)")]),t._v(" "),s("li",[s("code",[t._v("getStartTime")]),t._v("：获取组件开始执行的时间，为Date对象(从v2.11.4开始支持)")]),t._v(" "),s("li",[s("code",[t._v("getEndTime")]),t._v("：获取组件结束执行的时间，为Date对象(从v2.11.4开始支持)")]),t._v(" "),s("li",[s("code",[t._v("getException")]),t._v("：获取此组件抛出的异常，如果isSuccess为false的话。但是这里要注意下：有exception，success一定为false，但是success为false，不一定有exception，因为有可能没执行到，或者没执行结束(any的情况)。")])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("如果你的某一个组件抛出了异常，在默认配置情况下，流程会中断。那么"),s("code",[t._v("response.getCause()")]),t._v("和相应组件步骤里的exception都是一致的。且没执行的组件不会有相应步骤信息。")])]),t._v(" "),s("h2",{attrs:{id:"设置自定义步骤信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置自定义步骤信息"}},[t._v("#")]),t._v(" 设置自定义步骤信息"),s("Badge",{attrs:{text:"v2.13.0+"}})],1),t._v(" "),s("p",[t._v("你可以在组件里设置自定义步骤信息：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@LiteflowComponent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ACmp")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeComponent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStepData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"step_a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这样你就可以在"),s("code",[t._v("LiteflowResponse")]),t._v("对象中拿到每个step对象中拿到"),s("code",[t._v("stepData")]),t._v("信息：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getExecuteStepQueue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        cmpStep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmpStep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStepData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("这个特性的意义在于，你可以监控上下文中的某一个数据在经过每个组件时的变化数据。比如上下文中一个count属性，每经过一个组件+1。")]),t._v(" "),s("p",[t._v("那么你最终拿到的step队列中，你可以清楚的看到当时这个step中的count属性数据是多少。")])])}),[],!1,null,null,null);s.default=e.exports}}]);