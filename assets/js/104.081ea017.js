(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{566:function(e,n,i){"use strict";i.r(n);var o=i(8),t=Object(o.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[n("strong",[e._v("版本支持：")]),n("Badge",{attrs:{text:"v2.13.0+",vertical:"middle"}})],1),e._v(" "),n("p",[e._v("在LiteFlow框架中，最重要的两个概念就是"),n("code",[e._v("规则")]),e._v("以及"),n("code",[e._v("组件")]),e._v("。")]),e._v(" "),n("p",[e._v("框架提供了一个元数据管理器"),n("code",[e._v("LiteflowMetaOperator")]),e._v("用来管理这两大元素。")]),e._v(" "),n("p",[e._v("这里解释一些比较重要的方法：")]),e._v(" "),n("p",[n("code",[e._v("Chain getChain(String chainId)")]),e._v("：通过chainId得到Chain对象")]),e._v(" "),n("p",[n("code",[e._v("List<Chain> getChainsContainsNodeId(String nodeId)")]),e._v("：找出含有指定nodeId的chain对象")]),e._v(" "),n("p",[n("code",[e._v("void reloadAllChain()")]),e._v("：刷新所有的规则")]),e._v(" "),n("p",[n("code",[e._v("void reloadOneChain(String chainId, String el)")]),e._v("：刷新某一个规则")]),e._v(" "),n("p",[n("code",[e._v("void reloadOneChain(String chainId, String el, String routeEl)")]),e._v("：刷新某一个规则，带决策路由。（有关决策路由的知识请参考"),n("RouterLink",{attrs:{to:"/pages/ec1ac4/"}},[e._v("决策路由概念和介绍")]),e._v("）")],1),e._v(" "),n("p",[n("code",[e._v("void removeChain(String chainId)")]),e._v("：从元数据卸载掉一个chain")]),e._v(" "),n("p",[n("code",[e._v("void removeChain(String... chainIds)")]),e._v("：从元数据中卸载掉多个chain")]),e._v(" "),n("p",[n("code",[e._v("List<Node> getNodes(Executable executable)")]),e._v("：从任意Executable对象中取到Node列表，Executable包括Chain，Condition，Node")]),e._v(" "),n("p",[n("code",[e._v("List<Node> getNodes(String chainId)")]),e._v("：通过chainId获得这个chain中所有的Node")]),e._v(" "),n("p",[n("code",[e._v("List<Node> getNodesInAllChain(String nodeId)")]),e._v("：通过nodeId找到在所有Chain中存在的Node对象列表")])])}),[],!1,null,null,null);n.default=t.exports}}]);