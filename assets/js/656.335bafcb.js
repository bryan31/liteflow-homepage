(window.webpackJsonp=window.webpackJsonp||[]).push([[656],{1118:function(s,t,a){"use strict";a.r(t);var e=a(8),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("LiteFlow为执行的过程提供了详细的步骤信息。")]),s._v(" "),t("p",[s._v("获取一条流程执行的步骤信息是通过"),t("code",[s._v("response")]),s._v("对象来获取的：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LiteflowResponse")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CustomContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" response "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" flowExecutor"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chain1"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"初始参数"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CustomContext")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("CmpStep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" stepMap "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" response"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getExecuteSteps")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("获取到的是一个KV的数据结构，key就是你的组件ID，value则是一个"),t("code",[s._v("CmpStep")]),s._v("对象。")]),s._v(" "),t("p",[s._v("在这个对象里，你可以通过以下方法获得你要的数据：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("isSuccess")]),s._v("：此组件是否执行成功")]),s._v(" "),t("li",[t("code",[s._v("getNodeId")]),s._v("：获得组件Id")]),s._v(" "),t("li",[t("code",[s._v("getNodeName")]),s._v("：获得组件名称")]),s._v(" "),t("li",[t("code",[s._v("getTimeSpent")]),s._v("：获得组件的耗时，单位为毫秒")]),s._v(" "),t("li",[t("code",[s._v("getException")]),s._v("：获取此组件抛出的异常，如果isSuccess为false的话。但是这里要注意下：有exception，success一定为false，但是success为false，不一定有exception，因为有可能没执行到，或者没执行结束(any的情况)。")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("如果你的某一个组件抛出了异常，在默认配置情况下，流程会中断。那么"),t("code",[s._v("response.getCause()")]),s._v("和相应组件步骤里的exception都是一致的。且没执行的组件不会有相应步骤信息。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);