(window.webpackJsonp=window.webpackJsonp||[]).push([[722],{1182:function(t,a,s){"use strict";s.r(a);var n=s(8),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"v2-11-0介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v2-11-0介绍"}},[t._v("#")]),t._v(" v2.11.0介绍")]),t._v(" "),a("p",[t._v("v2.11.0是一个大版本，LiteFlow提供了5个大的新特性，以及3个加强，2个bug修复。")]),t._v(" "),a("p",[t._v("LiteFlow同时更换了新的项目Logo和启动了新的域名。")]),t._v(" "),a("p",[t._v("LF在这个版本改头换面，以全新的姿态继续向前冲~")]),t._v(" "),a("h2",{attrs:{id:"新的项目logo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新的项目logo"}},[t._v("#")]),t._v(" 新的项目LOGO")]),t._v(" "),a("img",{staticClass:"no-zoom",staticStyle:{zoom:"20%"},attrs:{src:t.$withBase("/img/whats_new/2_11_0_1.png")}}),t._v(" "),a("p",[t._v("感谢设计师"),a("code",[t._v("Evan Lou")]),t._v("的帮助，为LiteFlow带来了全新的Logo。🤙")]),t._v(" "),a("p",[t._v("新Logo寓意：")]),t._v(" "),a("p",[t._v("1.整体是一片树叶形状，树叶既代表了轻量，也象征着LiteFlow会一直像树叶那样进行光合作用，释放氧气。")]),t._v(" "),a("p",[t._v("2.叶子里的叶脉是一个L和F的交错变体，象征着LiteFlow的缩写。")]),t._v(" "),a("p",[t._v("3.叶脉简单且延展开，象征流程的分叉。")]),t._v(" "),a("p",[t._v("4.整个叶子被叶脉分隔成4部分，象征着编排，4个不同的部分组成了一片完美的叶子。")]),t._v(" "),a("h2",{attrs:{id:"启用全新域名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启用全新域名"}},[t._v("#")]),t._v(" 启用全新域名")]),t._v(" "),a("p",[t._v("LiteFlow在v2.11.0启用了全新的域名："),a("a",{attrs:{href:"https://liteflow.cc",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://liteflow.cc"),a("OutboundLink")],1),t._v("。简单且好记。")]),t._v(" "),a("p",[t._v("同时老的域名也是可以访问的，会自动重定向到新的域名上。")]),t._v(" "),a("h2",{attrs:{id:"新的slogan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新的slogan"}},[t._v("#")]),t._v(" 新的Slogan")]),t._v(" "),a("p",[t._v("LiteFlow会从2.11.0这个版本开始，为每一个版本都设计一句Slogan。")]),t._v(" "),a("p",[t._v("这个版本的Slogan为："),a("code",[t._v("Keep on the light side.")]),t._v("。中文寓意为："),a("code",[t._v("逐光而行")]),t._v("。")]),t._v(" "),a("p",[t._v("这句Slogan一语双关，其中"),a("code",[t._v("light")]),t._v("谐音"),a("code",[t._v("lite")]),t._v("，表示我们会一直坚持LiteFlow的开源迭代。")]),t._v(" "),a("p",[t._v("逐光而行，我希望我自己可以践行，人总要需要一道光来照亮生命，我们疲惫且努力的追逐那道光，远离黑暗。")]),t._v(" "),a("h2",{attrs:{id:"特性1-能够用java原生语言来写脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性1-能够用java原生语言来写脚本"}},[t._v("#")]),t._v(" 特性1：能够用Java原生语言来写脚本")]),t._v(" "),a("p",[t._v("丰富的脚本语言支持是LiteFlow的一大特色，脚本语言轻巧，能否被即时刷新的特点受到了很多开发者的喜爱。")]),t._v(" "),a("p",[t._v("LiteFlow之前支持了挺多的脚本语言，分别是：Groovy，Javascript，Python，QLExpress，Lua，Aviator。")]),t._v(" "),a("p",[t._v("但是不同的语言有不同的语法结构，很多不熟悉的这些语言写法的同学可能还要花点时间去学习该如何写。")]),t._v(" "),a("p",[t._v("这次版本LiteFlow支持了原生Java脚本语言的写法，这意味着你可以无学习成本的直接在脚本里用Java来书写逻辑。")]),t._v(" "),a("img",{staticClass:"no-zoom",staticStyle:{zoom:"70%"},attrs:{src:t.$withBase("/img/whats_new/2_11_0_2.png")}}),t._v(" "),a("p",[t._v("关于Java脚本语言的详细文档请参照官网中"),a("code",[t._v("脚本组件->脚本语言种类->Java脚本引擎")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"特性2-支持了redis中存储规则和脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性2-支持了redis中存储规则和脚本"}},[t._v("#")]),t._v(" 特性2：支持了Redis中存储规则和脚本")]),t._v(" "),a("p",[t._v("LiteFlow支持丰富的存储插件，所有的关系型数据库以及各种注册中心。")]),t._v(" "),a("p",[t._v("这次我们新增了Redis插件，用Redis来存储规则以及脚本。Redis在各大企业中用的比较多。为了保证使用的多样性。我们甚至开发了2种模式："),a("code",[t._v("轮询拉取模式")]),t._v("和"),a("code",[t._v("订阅模式")]),t._v("，各有特点。")]),t._v(" "),a("p",[t._v("其中轮询拉取模式，我们做了非常多的优化，我们对每一个脚本和规则生成了指纹，只比对指纹，而非拉取整个数据，消耗极小。")]),t._v(" "),a("p",[t._v("订阅模式非常实时，但是需要你用"),a("code",[t._v("Redission")]),t._v("框架来操作Redis，算有一定的使用限制。具体选用哪种模式，交由开发者来决定。")]),t._v(" "),a("p",[t._v("关于redis插件的详细文档请参照官网中"),a("code",[t._v("规则文件->Redis配置源")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"特性3-全方位的超时控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性3-全方位的超时控制"}},[t._v("#")]),t._v(" 特性3：全方位的超时控制")]),t._v(" "),a("p",[t._v("在以前的LiteFlow版本中，超时控制只能针对"),a("code",[t._v("WHEN")]),t._v("表达式，且是全局配置。")]),t._v(" "),a("p",[t._v("在新版本中，我们支持了全方位的超时控制体系，一个"),a("code",[t._v("maxWaitSeconds")]),t._v("关键字可对任意的组件、表达式、流程进行超时控制。")]),t._v(" "),a("p",[t._v("对任意表达式的控制：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    THEN(a,b).maxWaitSeconds(5);\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    FOR(2).DO(a).maxWaitSeconds(3);\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("对组件的超时控制")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    WHEN(\n        a.maxWaitSeconds(2),\n        b.maxWaitSeconds(3)\n    );\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("对子流程的超时控制")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("testChain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    THEN(b)\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    testChain.maxWaitSeconds(3);\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("关于这块的详细文档请参考官网文档中的"),a("code",[t._v("高级特性->超时控制")])]),t._v(" "),a("h2",{attrs:{id:"特性4-异步循环模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性4-异步循环模式"}},[t._v("#")]),t._v(" 特性4：异步循环模式")]),t._v(" "),a("p",[t._v("经常群里的小伙伴会反映：LiteFLow的循环体系只支持同步，如果能支持异步就好了。")]),t._v(" "),a("p",[t._v("这个版本我们支持了！对三种循环模式都予以了异步支持。")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   FOR(2).parallel(true).DO(THEN(a,b,c));\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    WHILE(x).parallel(true).DO(THEN(a,b,c));\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    ITERATOR(x).parallel(true).DO(THEN(a,b,c));\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("一个"),a("code",[t._v("parallel")]),t._v("关键字搞定。是不是很简单？")]),t._v(" "),a("p",[t._v("关于异步循环的详细文档请参考官网文档中的"),a("code",[t._v("高级特性->异步循环模式")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"特性5-组件回滚"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性5-组件回滚"}},[t._v("#")]),t._v(" 特性5：组件回滚")]),t._v(" "),a("p",[t._v("这也就是所谓的逆操作。LiteFlow从这个版本开始有逆向操作了！LiteFlow会自动帮你记录执行的顺序，当某个组件抛出异常时，会自动按实际执行的顺序进行逆操作。")]),t._v(" "),a("p",[t._v("这一切的前提只需要你在组件中实现"),a("code",[t._v("rollback")]),t._v("方法。")]),t._v(" "),a("p",[t._v("在自动执行完回滚操作后，LiteFlow的日志还会把回滚的步骤都打出来，让你一目了然。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@LiteflowComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ACmp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("NodeComponent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do your biz")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do your biz")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("关于组件回滚的详细文档请参考官网文档中的"),a("code",[t._v("高级特性->组件回滚")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"测试用例增加到1200个左右"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试用例增加到1200个左右"}},[t._v("#")]),t._v(" 测试用例增加到1200个左右")]),t._v(" "),a("p",[t._v("我相信，一个开源框架的上限是看这个框架所解决的问题和这个框架提供的特性和设计。而下限则是这个开源框架的测试用例的完备性。")]),t._v(" "),a("p",[t._v("我们不仅要开疆拓土，提供新特性和新的探索，也要守疆土，确保整体稳定性和质量。")]),t._v(" "),a("p",[t._v("我们这次将测试用例数量提高到近1200个，几乎覆盖到了所有的地方。")]),t._v(" "),a("p",[t._v("大家可以放心用。我们也有完备的社区和组织，社区目前拥有3500人左右。")])])}),[],!1,null,null,null);a.default=e.exports}}]);