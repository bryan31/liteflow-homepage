(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{511:function(t,a,s){"use strict";s.r(a);var n=s(8),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("版本支持：")]),a("Badge",{attrs:{text:"v2.9.0+",vertical:"middle"}})],1),t._v(" "),a("p",[t._v("LiteFlow提供了循环编排表达式组合。")]),t._v(" "),a("h2",{attrs:{id:"for循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[t._v("#")]),t._v(" FOR循环")]),t._v(" "),a("p",[t._v("FOR循环表达式用于固定次数的循环，通常的用法为：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    FOR(5).DO(THEN(a, b));\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("上述表达式表示把a->b这个链路固定循环了5次。")]),t._v(" "),a("p",[t._v("如果你在定义规则的时候并不确定要循环几次，要在代码运行的时候才知道。那你也可以这样定义：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    FOR(f).DO(THEN(a, b));\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("其中f这个节点需要为次数循环组件，返回一个int循环次数，如何定义请参照"),a("RouterLink",{attrs:{to:"/pages/5f971f/"}},[t._v("次数循环组件")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"while循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while循环"}},[t._v("#")]),t._v(" WHILE循环")]),t._v(" "),a("p",[t._v("WHILE循环表达式用于有条件的循环，通常用法为：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    WHILE(w).DO(THEN(a, b));\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("其中w这个节点需要为"),a("code",[t._v("布尔组件")]),t._v("，返回一个布尔值，为true则继续循环，如何定义请参照"),a("RouterLink",{attrs:{to:"/pages/cb0b59/"}},[t._v("布尔组件")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"iterator迭代循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iterator迭代循环"}},[t._v("#")]),t._v(" ITERATOR迭代循环")]),t._v(" "),a("p",[t._v("ITERATOR迭代循环表达式通常用于集合的循环，通常用法为：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    ITERATOR(x).DO(THEN(a, b));\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("其中x这个节点需要为迭代循环组件，返回一个迭代器，如何定义请参照"),a("RouterLink",{attrs:{to:"/pages/64262b/"}},[t._v("迭代循环组件")]),t._v("。")],1),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("要注意的是，迭代循环组件只支持java定义，不支持脚本。")])]),t._v(" "),a("h2",{attrs:{id:"break"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break"}},[t._v("#")]),t._v(" BREAK")]),t._v(" "),a("p",[t._v("LiteFlow同样也支持BREAK语法，代表退出循环。")]),t._v(" "),a("p",[t._v("BREAK关键字可以跟在FOR和WHILE后面，通常用法为：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    FOR(f).DO(THEN(a, b)).BREAK(c);\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    WHILE(w).DO(THEN(a, b)).BREAK(c);\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("其中c这个节点需要为"),a("code",[t._v("布尔组件")]),t._v("，返回一个布尔值，为true则退出循环。如何定义请参考"),a("RouterLink",{attrs:{to:"/pages/cb0b59/"}},[t._v("布尔组件")]),t._v("。")],1),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("BREAK关键字是在每次循环的末尾进行判断的。")])]),t._v(" "),a("h2",{attrs:{id:"多层嵌套循环中获取下标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多层嵌套循环中获取下标"}},[t._v("#")]),t._v(" 多层嵌套循环中获取下标"),a("Badge",{attrs:{text:"v2.12.3+"}})],1),t._v(" "),a("p",[t._v("如果在一个3层嵌套循环里：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    FOR(x).DO(\n        FOR(y).DO(\n            FOR(z).DO(\n                THEN(a,b)\n            )\n        )\n    );\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("a组件要取到当前循环下标："),a("code",[t._v("this.getLoopIndex()")]),t._v("或者"),a("code",[t._v("this.getPreNLoopIndex(0)")]),t._v("，这2者是等价的")]),t._v(" "),a("p",[t._v("a组件要取到第二层循环下标："),a("code",[t._v("this.getPreLoopIndex()")]),t._v("或者"),a("code",[t._v("this.getPreNLoopIndex(1)")]),t._v("，这2者是等价的")]),t._v(" "),a("p",[t._v("a组件要取到第一层循环下标："),a("code",[t._v("this.getPreNLoopIndex(2)")])]),t._v(" "),a("p",[t._v("唯一要关注的就是"),a("code",[t._v("getPreNLoopIndex")]),t._v("这个方法，里面的数字代表了"),a("strong",[t._v("往前")]),t._v("取多少层，数字0就代表了当前层。以此类推。")]),t._v(" "),a("h2",{attrs:{id:"多层嵌套循环中获取迭代对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多层嵌套循环中获取迭代对象"}},[t._v("#")]),t._v(" 多层嵌套循环中获取迭代对象"),a("Badge",{attrs:{text:"v2.12.3+"}})],1),t._v(" "),a("p",[t._v("如果在一个3层嵌套循环里：")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("chain")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("chain1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    ITERATOR(x).DO(\n        ITERATOR(y).DO(\n            ITERATOR(z).DO(\n                THEN(a,b)\n            )\n        )\n    );\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("chain")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("a组件要取到当前迭代对象："),a("code",[t._v("this.getCurrLoopObj()")]),t._v("或者"),a("code",[t._v("this.getPreNLoopObj(0)")]),t._v("，这2者是等价的")]),t._v(" "),a("p",[t._v("a组件要取到第二层迭代对象："),a("code",[t._v("this.getPreLoopObj()")]),t._v("或者"),a("code",[t._v("this.getPreNLoopObj(1)")]),t._v("，这2者是等价的")]),t._v(" "),a("p",[t._v("a组件要取到第一层迭代对象："),a("code",[t._v("this.getPreNLoopObj(2)")])]),t._v(" "),a("p",[t._v("唯一要关注的就是"),a("code",[t._v("getPreNLoopObj")]),t._v("这个方法，里面的数字代表了"),a("strong",[t._v("往前")]),t._v("取多少层，数字0就代表了当前层。以此类推。")]),t._v(" "),a("h2",{attrs:{id:"脚本中获取循环下标和迭代对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚本中获取循环下标和迭代对象"}},[t._v("#")]),t._v(" 脚本中获取循环下标和迭代对象")]),t._v(" "),a("p",[t._v("具体内容请参照"),a("RouterLink",{attrs:{to:"/pages/d861c8/"}},[t._v("脚本与Java进行交互")]),t._v("中的"),a("code",[t._v("元数据获取方式之二")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"异步循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步循环"}},[t._v("#")]),t._v(" 异步循环"),a("Badge",{attrs:{text:"v2.11.0+"}})],1),t._v(" "),a("p",[t._v("LiteFlow支持了异步循环特性，关于异步循环请参考高级特性中的"),a("RouterLink",{attrs:{to:"/pages/35cc4a/"}},[t._v("异步循环模式")]),t._v("。")],1)])}),[],!1,null,null,null);a.default=e.exports}}]);