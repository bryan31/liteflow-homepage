(window.webpackJsonp=window.webpackJsonp||[]).push([[726],{1188:function(t,v,a){"use strict";a.r(v);var r=a(8),_=Object(r.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"v2-10-1介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v2-10-1介绍"}},[t._v("#")]),t._v(" v2.10.1介绍")]),t._v(" "),v("p",[t._v("前段时间我们刚刚发布了LiteFlow的大版本2.10.0。在这个版本中增加了诸多特性和代码的优化。")]),t._v(" "),v("p",[t._v("我们现在又马不停蹄的推出了小版本升级：2.10.1。")]),t._v(" "),v("p",[t._v("其实2.10.0很稳定，最新的2.10.1版本主要为了增加一个新的脚本语言扩展Aviator和支持了循环表达式的嵌套循环增强。")]),t._v(" "),v("h2",{attrs:{id:"支持aviator脚本语言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#支持aviator脚本语言"}},[t._v("#")]),t._v(" 支持Aviator脚本语言")]),t._v(" "),v("p",[t._v("首先介绍下Aviator。")]),t._v(" "),v("p",[t._v("Aviator是非常优秀的国产表达式引擎开源框架。文档详细，性能优秀，整个解析过程最多扫2次，保证了它的性能超越大部分解释型表达式引擎，整体非常轻量级，整个jar包大小哪怕发展到现在5.3这个版本，也才600k。")]),t._v(" "),v("p",[t._v("在社区中，我听到有人希望支持Aviator这个脚本语言。LiteFlow在脚本的支持度方面一直很全，既然Aviator很多人在用，那LiteFlow索性就一起支持了。")]),t._v(" "),v("p",[t._v("从2.10.1起，社区的小伙伴可以在LiteFlow里使用Aviator脚本了。具体如何依赖和注意事项，请看官方文档中的脚本这一章节。")]),t._v(" "),v("h2",{attrs:{id:"循环表达式嵌套"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#循环表达式嵌套"}},[t._v("#")]),t._v(" 循环表达式嵌套")]),t._v(" "),v("p",[t._v("LiteFlow之前的版本推出了循环表达式，循环表达式主要有"),v("code",[t._v("FOR")]),t._v(","),v("code",[t._v("WHILE")]),t._v("以及迭代表达式"),v("code",[t._v("ITERATOR")]),t._v("，之前是不支持循环嵌套的。")]),t._v(" "),v("p",[t._v("新版本支持了循环表达式的嵌套增强。大家可以去试一试。")]),t._v(" "),v("h2",{attrs:{id:"其余的更新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其余的更新"}},[t._v("#")]),t._v(" 其余的更新")]),t._v(" "),v("p",[t._v("2.10.1版本中我们对所有的代码进行了统一插件格式化处理，修复了多脚本混用在SQL中不起效果的bug。优化了脚本这一块的核心代码。")])])}),[],!1,null,null,null);v.default=_.exports}}]);