(window.webpackJsonp=window.webpackJsonp||[]).push([[732],{1194:function(t,a,v){"use strict";v.r(a);var _=v(8),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("我们一直在努力让LiteFlow这款规则引擎更好用，在2.9.0刚出来的时候，LiteFlow推出了数据库，nacos，etcd，zk这几种原生插件的支持。")]),t._v(" "),a("p",[t._v("但是随后有小伙伴反应，数据库里不支持存储脚本，zk，nacos，etcd里不支持脚本和规则分离，都得写在一起。")]),t._v(" "),a("p",[t._v("今天推出的2.9.3版本我们解决了一大部分这方面的诉求。")]),t._v(" "),a("h2",{attrs:{id:"db支持脚本的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#db支持脚本的存储"}},[t._v("#")]),t._v(" DB支持脚本的存储")]),t._v(" "),a("p",[t._v("我们在2.9.3版本中首先解决了数据库不能存储脚本的问题。")]),t._v(" "),a("p",[t._v("用新增的自定义表来解决。你现在可以把脚本也存到数据库中了。")]),t._v(" "),a("p",[t._v("这块的文档详见"),a("RouterLink",{attrs:{to:"/pages/236b4f/"}},[t._v("SQL数据库配置源")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"zk和etcd结构进行了大幅度改造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zk和etcd结构进行了大幅度改造"}},[t._v("#")]),t._v(" ZK和Etcd结构进行了大幅度改造")]),t._v(" "),a("p",[t._v("之前zk和etcd采用的方式比较傻一点，就单个节点存储所有的xml形式的规则。这样导致的结果是修改起来总得修改一整个规则。")]),t._v(" "),a("p",[t._v("在2.9.3中，我们对zk和etcd的存储结构进行了大刀阔斧的改变。使得zk和etcd也能像关系型数据库那样，规则和脚本能分开进行存储。每个规则和每个脚本都有单独的节点。")]),t._v(" "),a("p",[t._v("并且存储的时候，我们去除了xml的这种格式，只存关键数据。我们插件会给你自动的拼装。")]),t._v(" "),a("p",[t._v("这块文档详见"),a("RouterLink",{attrs:{to:"/pages/ffc345/"}},[t._v("ZK规则文件配置源")]),t._v("以及"),a("RouterLink",{attrs:{to:"/pages/4bfac2/"}},[t._v("Etcd配置源")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"为什么nacos没进行改造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么nacos没进行改造"}},[t._v("#")]),t._v(" 为什么Nacos没进行改造？")]),t._v(" "),a("p",[t._v("因为我们搞不定，Nacos没法对一个group进行监听，如果拆分了，那就会导致新增规则，删除规则没法被监听到。")]),t._v(" "),a("p",[t._v("而现在这种单个节点的形式，虽然没拆分，但是功能是齐全的。这也是无奈的选择。我们也想拆分的，但是我们搞不定。")]),t._v(" "),a("h2",{attrs:{id:"选择组件的选择功能增强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择组件的选择功能增强"}},[t._v("#")]),t._v(" 选择组件的选择功能增强")]),t._v(" "),a("p",[t._v("在之前，选择组件只能根据Id来进行选择，2.9.0推出了根据tag来进行选择。但是我们觉得还不够。")]),t._v(" "),a("p",[t._v("2.9.3在这基础上进行了增强，推出了简单的选择表达式。基本上一看即会。")]),t._v(" "),a("p",[t._v("相关文档详见"),a("RouterLink",{attrs:{to:"/pages/c0f5d7/"}},[t._v("选择组件")]),t._v("。")],1),t._v(" "),a("h2",{attrs:{id:"修复一些bug"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修复一些bug"}},[t._v("#")]),t._v(" 修复一些Bug")]),t._v(" "),a("p",[t._v("小伙伴们在使用中的时候，会碰到一些已经推出的特性在某些场景下达不到预期的效果。")]),t._v(" "),a("p",[t._v("在这个版本中，我们修复了一些问题，比如脚本的加载存在先后关系，这是不合理的，我们修复了。")]),t._v(" "),a("p",[t._v("比如EL中的字符串格式丢失问题，EL中的"),a("code",[t._v("data")]),t._v("关键字的转型问题，我们也修复了。")]),t._v(" "),a("p",[t._v("同时改正了一些不规范的代码问题，比如chainName和chainId混用的情况。")]),t._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),a("p",[t._v("大家见证着LiteFlow一步步往前走，同时也希望更多人来帮助这个项目的发展。")]),t._v(" "),a("p",[t._v("同样的，我们也保证2.9.3的质量问题，有任何疑问，欢迎来群里反馈。")])])}),[],!1,null,null,null);a.default=s.exports}}]);