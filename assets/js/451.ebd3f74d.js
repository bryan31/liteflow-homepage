(window.webpackJsonp=window.webpackJsonp||[]).push([[451],{913:function(t,e,s){"use strict";s.r(e);var a=s(8),l=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("有些小伙伴在配置规则时，因为特殊原因，需要同时加载2种不同的配置，甚至是配置源，比如：")]),t._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("liteflow.rule-source")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("multipleType/flow.el.xml,multipleType/flow.el.json")]),t._v("\n")])])]),e("p",[t._v("这种模式在正常下会解析失败，但是LiteFLow提供了一个参数去支持这个特性，如果出现不同的类型的配置，需要加上这个属性：")]),t._v(" "),e("div",{staticClass:"language-properties extra-class"},[e("pre",{pre:!0,attrs:{class:"language-properties"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[t._v("liteflow.support-multiple-type")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[t._v("true")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=l.exports}}]);