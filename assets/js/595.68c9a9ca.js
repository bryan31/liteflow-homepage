(window.webpackJsonp=window.webpackJsonp||[]).push([[595],{1059:function(t,v,_){"use strict";_.r(v);var a=_(8),s=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"v2-9-6介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v2-9-6介绍"}},[t._v("#")]),t._v(" v2.9.6介绍")]),t._v(" "),v("p",[t._v("LiteFlow继续发力，推出了v2.9.6版本。")]),t._v(" "),v("p",[t._v("该版本主要改进了组件底层的实例参数结构，并且对循环组件增加了循环下标的特性。")]),t._v(" "),v("p",[t._v("并且还修复了一些BUG。")]),t._v(" "),v("h2",{attrs:{id:"优化组件底层的实例参数结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化组件底层的实例参数结构"}},[t._v("#")]),t._v(" 优化组件底层的实例参数结构")]),t._v(" "),v("p",[t._v("这一层优化对于用户是无感知的。但是对于LiteFlow本身的意义是重大的。")]),t._v(" "),v("p",[t._v("随着LiteFlow这个开源项目提供的功能和特性越来越多，我作为作者，也需要考虑今后迭代的成本问题。我希望一个成熟的开源作品，越迭代是代码质量越好的，逻辑是越来越清晰的，结构是越优雅的，这样反过来也能促进迭代速度和成员的参与度。")]),t._v(" "),v("p",[t._v("所以不光要保证特性的实现，还时常需要对项目的架构和模块的实现结构进行复盘，看看哪里需要被优化。")]),t._v(" "),v("p",[t._v("这点目前来说，做的还是相对不错的，所以使用者也大可放心的用。我们在2.9.6中，优化了底层核心部分前期设计的不合理处。使得以后的扩展度会更加高。")]),t._v(" "),v("h2",{attrs:{id:"对循环组件提供循环下标的特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对循环组件提供循环下标的特性"}},[t._v("#")]),t._v(" 对循环组件提供循环下标的特性")]),t._v(" "),v("p",[t._v("社区里一直有小伙伴在问，对于循环组件如何获取下标的问题。很遗憾，在之前的版本中，LiteFlow一直未能支持。")]),t._v(" "),v("p",[t._v("其实看起来很简单，但是究其底层还是受限于组件底层实例参数的结构问题。也就是前面所提到的。")]),t._v(" "),v("p",[t._v("但是我们这一版本优化了底层的结构，使得这一问题也迎刃而解了。否则可能会通过更为复杂的手段来实现，但是这不是我所希望的，所以这也是这一特性迟迟未动手的原因。")]),t._v(" "),v("p",[t._v("好了，现在支持了。使用很简单，详情请参照"),v("RouterLink",{attrs:{to:"/pages/5f971f/"}},[t._v("次数循环组件")]),t._v("以及"),v("RouterLink",{attrs:{to:"/pages/e6995e/"}},[t._v("条件循环组件")]),t._v("。")],1)])}),[],!1,null,null,null);v.default=s.exports}}]);